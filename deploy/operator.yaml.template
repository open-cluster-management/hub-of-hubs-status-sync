---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${COMPONENT}
spec:
  replicas: 1
  selector:
    matchLabels:
      name: ${COMPONENT}
  template:
    metadata:
      labels:
        name: ${COMPONENT}
    spec:
      serviceAccountName: ${COMPONENT}
      containers:
        - name: ${COMPONENT}
          args:
            - '--zap-devel=true'
          image: ${REGISTRY}/${COMPONENT}:${IMAGE_TAG}
          imagePullPolicy: Always
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                 apiVersion: v1
                 fieldPath: metadata.namespace
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: hub-of-hubs-database-secret
                  key: url
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: HOH_STATUS_SYNC_INTERVAL
              value: 5s
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ${COMPONENT}
subjects:
- kind: ServiceAccount
  name: ${COMPONENT}
  namespace: open-cluster-management
roleRef:
  kind: ClusterRole
  name: ${COMPONENT}
  apiGroup: rbac.authorization.k8s.io
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ${COMPONENT}
rules:
- apiGroups:
  - "policy.open-cluster-management.io"
  resources:
  - placementbindings
  - policies
  - policies/status
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - "apps.open-cluster-management.io"
  resources:
  - placementrules
  - placementrules/status
  - subscriptionstatuses
  - subscriptionstatuses/status
  - subscriptionreports
  - subscriptionreports/status
  - subscriptions/finalizers
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - "cluster.open-cluster-management.io"
  resources:
  - placements
  - placements/finalizers
  - placements/status
  - placementdecisions
  - placementdecisions/status
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ${COMPONENT}
subjects:
- kind: ServiceAccount
  name: ${COMPONENT}
roleRef:
  kind: Role
  name: ${COMPONENT}
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: ${COMPONENT}
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - services/finalizers
  - endpoints
  - persistentvolumeclaims
  - events
  - configmaps
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resourceNames:
  - ${COMPONENT}
  resources:
  - deployments/finalizers
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - replicasets
  - deployments
  verbs:
  - get
- apiGroups:
  - "coordination.k8s.io"
  resources:
  - leases
  verbs:
  - get
  - create
  - update
  - delete
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ${COMPONENT}
